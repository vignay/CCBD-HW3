# Part 1-5
# -------------------------------------------
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: todo-app
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: todo-app
#   template:
#     metadata:
#       labels:
#         app: todo-app
#     spec:
#       containers:
#       - name: todo-app
#         image: docker.io/adithyak243/todo-app:hw3
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 5000
#         env:
#         - name: MONGO_HOST
#           value: mongodb://mongo:27017/todo-app
#         - name: MONGO_PORT
#           value: '27017' 
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: todo-app
# spec:
#   selector:
#     app: todo-app
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 5000
#   type: LoadBalancer


# Part 6
# -------------------------------------------
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: todo-app
# spec:
#   replicas: 2
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxUnavailable: 1
#   selector:
#     matchLabels:
#       app: todo-app
#   template:
#     metadata:
#       labels:
#         app: todo-app
#     spec:
#       containers:
#       - name: todo-app
#         image: docker.io/adithyak243/todo-app:hw3.1
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 5000
#         env:
#         - name: MONGO_HOST
#           value: mongodb://mongo:27017/todo-app
#         - name: MONGO_PORT
#           value: '27017' 
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: todo-app
# spec:
#   selector:
#     app: todo-app
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 5000
#   type: LoadBalancer


# Part 7
# -------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: todo-app
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - name: todo-app
        image: docker.io/adithyak243/todo-app:hw3.5
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: MONGO_HOST
          value: mongodb://mongo:27017/todo-app
        - name: MONGO_PORT
          value: '27017'
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: todo-app
spec:
  selector:
    app: todo-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer
